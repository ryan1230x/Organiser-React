[{"/var/www/html/2020-organiser/antd-design/src/index.js":"1","/var/www/html/2020-organiser/antd-design/src/reportWebVitals.js":"2","/var/www/html/2020-organiser/antd-design/src/App.js":"3","/var/www/html/2020-organiser/antd-design/src/pages/Home.js":"4","/var/www/html/2020-organiser/antd-design/src/pages/CreateTicket.js":"5","/var/www/html/2020-organiser/antd-design/src/actions/ticketActions.js":"6","/var/www/html/2020-organiser/antd-design/src/actions/constants.js":"7","/var/www/html/2020-organiser/antd-design/src/store.js":"8","/var/www/html/2020-organiser/antd-design/src/reducers/index.js":"9","/var/www/html/2020-organiser/antd-design/src/reducers/commentReducer.js":"10","/var/www/html/2020-organiser/antd-design/src/reducers/historyReducer.js":"11","/var/www/html/2020-organiser/antd-design/src/reducers/ticketReducer.js":"12","/var/www/html/2020-organiser/antd-design/src/pages/ViewTicket.js":"13","/var/www/html/2020-organiser/antd-design/src/actions/commentActions.js":"14","/var/www/html/2020-organiser/antd-design/src/actions/historyActions.js":"15","/var/www/html/2020-organiser/antd-design/src/components/ViewTicket/ViewBreadCrumbs.js":"16","/var/www/html/2020-organiser/antd-design/src/components/ViewTicket/ViewDescriptions.js":"17","/var/www/html/2020-organiser/antd-design/src/components/ViewTicket/ViewAddComment.js":"18","/var/www/html/2020-organiser/antd-design/src/components/ViewTicket/ViewComments.js":"19","/var/www/html/2020-organiser/antd-design/src/components/ViewTicket/ViewTimeline.js":"20","/var/www/html/2020-organiser/antd-design/src/components/ViewTicket/ViewClosingComment.js":"21","/var/www/html/2020-organiser/antd-design/src/reducers/tagReducer.js":"22","/var/www/html/2020-organiser/antd-design/src/actions/tagActions.js":"23","/var/www/html/2020-organiser/antd-design/src/components/Home/SneakPeakDrawer.js":"24","/var/www/html/2020-organiser/antd-design/src/actions/pageActions.js":"25","/var/www/html/2020-organiser/antd-design/src/reducers/pageReducer.js":"26","/var/www/html/2020-organiser/antd-design/src/components/Home/TagDrawer.js":"27","/var/www/html/2020-organiser/antd-design/src/reducers/userReducer.js":"28","/var/www/html/2020-organiser/antd-design/src/actions/userActions.js":"29","/var/www/html/2020-organiser/antd-design/src/pages/Login.js":"30","/var/www/html/2020-organiser/antd-design/src/firebase.js":"31","/var/www/html/2020-organiser/antd-design/src/components/Loader/LoginLoader.js":"32","/var/www/html/2020-organiser/antd-design/src/pages/Archive.js":"33","/var/www/html/2020-organiser/antd-design/src/components/ViewTicket/Snippet.js":"34","/var/www/html/2020-organiser/antd-design/src/reducers/snippetReducer.js":"35","/var/www/html/2020-organiser/antd-design/src/actions/snippetActions.js":"36"},{"size":617,"mtime":1610410351418,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1610281289092,"results":"39","hashOfConfig":"38"},{"size":4589,"mtime":1611280883272,"results":"40","hashOfConfig":"38"},{"size":7432,"mtime":1611515675547,"results":"41","hashOfConfig":"38"},{"size":8785,"mtime":1611515464569,"results":"42","hashOfConfig":"38"},{"size":3605,"mtime":1611284618523,"results":"43","hashOfConfig":"38"},{"size":1311,"mtime":1611398775238,"results":"44","hashOfConfig":"38"},{"size":410,"mtime":1610281289092,"results":"45","hashOfConfig":"38"},{"size":612,"mtime":1611333086528,"results":"46","hashOfConfig":"38"},{"size":701,"mtime":1611256631538,"results":"47","hashOfConfig":"38"},{"size":516,"mtime":1611081441281,"results":"48","hashOfConfig":"38"},{"size":1463,"mtime":1611521225791,"results":"49","hashOfConfig":"38"},{"size":6767,"mtime":1611513066284,"results":"50","hashOfConfig":"38"},{"size":1461,"mtime":1611274281302,"results":"51","hashOfConfig":"38"},{"size":971,"mtime":1610281289088,"results":"52","hashOfConfig":"38"},{"size":823,"mtime":1610997680806,"results":"53","hashOfConfig":"38"},{"size":1290,"mtime":1610996386738,"results":"54","hashOfConfig":"38"},{"size":3650,"mtime":1611512921261,"results":"55","hashOfConfig":"38"},{"size":2491,"mtime":1611256519451,"results":"56","hashOfConfig":"38"},{"size":701,"mtime":1610281289088,"results":"57","hashOfConfig":"38"},{"size":3775,"mtime":1611279058370,"results":"58","hashOfConfig":"38"},{"size":1229,"mtime":1611286219185,"results":"59","hashOfConfig":"38"},{"size":2357,"mtime":1611289399890,"results":"60","hashOfConfig":"38"},{"size":5867,"mtime":1611516055720,"results":"61","hashOfConfig":"38"},{"size":294,"mtime":1609943651267,"results":"62","hashOfConfig":"38"},{"size":457,"mtime":1610281289092,"results":"63","hashOfConfig":"38"},{"size":4368,"mtime":1610998014546,"results":"64","hashOfConfig":"38"},{"size":475,"mtime":1611232464325,"results":"65","hashOfConfig":"38"},{"size":261,"mtime":1610409960915,"results":"66","hashOfConfig":"38"},{"size":1000,"mtime":1610497220884,"results":"67","hashOfConfig":"38"},{"size":508,"mtime":1611256970686,"results":"68","hashOfConfig":"38"},{"size":438,"mtime":1610731943661,"results":"69","hashOfConfig":"38"},{"size":7646,"mtime":1611515969248,"results":"70","hashOfConfig":"38"},{"size":4244,"mtime":1611512978427,"results":"71","hashOfConfig":"38"},{"size":718,"mtime":1611399537112,"results":"72","hashOfConfig":"38"},{"size":1166,"mtime":1611447907008,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"17egiqb",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/var/www/html/2020-organiser/antd-design/src/index.js",[],["158","159"],"/var/www/html/2020-organiser/antd-design/src/reportWebVitals.js",[],"/var/www/html/2020-organiser/antd-design/src/App.js",["160"],"import React, { useState, useEffect } from \"react\";\n\n// import stylesheets\nimport './App.css';\nimport 'antd/dist/antd.css';\n\n// import logo\nimport logo from \"./dtLogo.png\";\n\n// import components for routing\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link\n} from \"react-router-dom\";\n\n// import redux and actions\nimport { connect } from \"react-redux\"\nimport { login, logout } from \"./actions/userActions\";\n\nimport { auth } from \"./firebase\";\n\n// Import Pages\nimport Home from \"./pages/Home\";\nimport CreateTicket from \"./pages/CreateTicket\";\nimport ViewTicket from \"./pages/ViewTicket\";\nimport Login from \"./pages/Login\";\nimport Archive from \"./pages/Archive\";\n\n// Import Icons\nimport { \n    HomeOutlined,\n    EditOutlined,    \n    ImportOutlined,\n    ProjectOutlined\n} from \"@ant-design/icons\";\n\n// Import Components\nimport { Layout, Menu } from \"antd\";\nimport LoginLoader from \"./components/Loader/LoginLoader\";\nconst { Sider, Content, Footer } = Layout;\n\n\n// Menu Items, navigation links for Sider\nconst menuItems = [\n  {   \n    to: \"/\",\n    value: \"Home\",\n    icon: <HomeOutlined />\n  },\n  {   \n    to: \"/create\",\n    value: \"Create\",\n    icon: <EditOutlined />\n  },\n  {\n    to:\"/archive\",\n    value: \"Archive\",\n    icon: <ProjectOutlined />\n  }\n]\n\nfunction App({ \n  login, \n  logout, \n  users, \n  loadingUser\n}) {\n\n  /**\n  * Once the App is rendered check if the user is \n  * authenticated with Firebase\n  */\n  useEffect(() => {\n    auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        /**        \n        * User logged in add the information through\n        * the login action function\n        */\n        login({\n          uuid: authUser.uid,\n          email: authUser.email,\n          displayName: authUser.displayName\n        });\n      } else {\n        /**\n        * User logged out\n        * use the logout action function\n        */\n        logout();\n      }\n    })\n  }, [])\n\n  /**\n  * Component state\n  */\n  const [collapsed, setCollapsed] = useState(false);\n\n  /**\n  * Helper function that toggles the sider collapse state\n  */\n  const handleCollapse = () => {\n    setCollapsed(!collapsed);\n  }\n\n  return (  \n    \n    // If the user is logged in display the page Home page\n    users === null ? (\n      // If the user data is loading display the loginloader\n      loadingUser ? (<LoginLoader />) : (<Login />)\n    ) : (\n    <Router>\n      <Layout style={{minHeight:\"100vh\"}}>\n        <Sider \n          style={{\n            background: \"white\", \n            position: \"fixed\", \n            top: 0, \n            bottom: 0, \n            left: 0\n          }} \n          collapsible \n          collapsed={collapsed} \n          onCollapse={handleCollapse}>\n          <img\n            className=\"side-logo\"\n            width={collapsed ? 80 : 200}\n            src={logo} \n            alt=\"Logo\"\n          />\n          <Menu \n            style={{height: \"100vh\"}} \n            defaultSelectedKeys={[\"0\"]} \n            theme={\"light\"}\n            mode=\"inline\"\n          >\n            {menuItems.map((item, index) => (\n              <Menu.Item \n                key={index} \n                icon={item.icon}\n              >\n                <Link to={item.to}>{item.value}</Link>\n              </Menu.Item>\n            ))}\n            <Menu.Item \n              key=\"3\"\n              icon={<ImportOutlined />}\n            >\n              <Link onClick={() => auth.signOut()}>Logout</Link>\n            </Menu.Item>            \n          </Menu>\n        </Sider>\n        <Layout>\n          <Content\n            className=\"main-content\"\n            style={{\n                paddingTop: 50,\n                paddingLeft: collapsed ? 102 : 232,\n                paddingRight: 32\n            }}>\n            <main>\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route path=\"/create\">\n                  <CreateTicket />\n                </Route>\n\t        <Route path=\"/archive\">\n                  <Archive />\n\t        </Route>\n                <Route path=\"/ticket/:id\" children={<ViewTicket />} />\n              </Switch>\n            </main>\n          </Content>\n          <Footer \n            style={{\n              textAlign: \"center\", \n              background: \"white\"\n            }}>\n              Made By Ryan Harper &copy; 2020\n            </Footer>\n        </Layout> \n      </Layout>\n    </Router>\n    )\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  users: state.users.users,\n  loadingUser: state.users.loading\n})\n\nexport default connect(mapStateToProps, { login, logout })(App);\n","/var/www/html/2020-organiser/antd-design/src/pages/Home.js",[],"/var/www/html/2020-organiser/antd-design/src/pages/CreateTicket.js",["161","162"],"/var/www/html/2020-organiser/antd-design/src/actions/ticketActions.js",[],"/var/www/html/2020-organiser/antd-design/src/actions/constants.js",[],"/var/www/html/2020-organiser/antd-design/src/store.js",[],"/var/www/html/2020-organiser/antd-design/src/reducers/index.js",[],"/var/www/html/2020-organiser/antd-design/src/reducers/commentReducer.js",["163"],"import * as constant from \"../actions/constants\";\n\nconst initialState = {\n  comments: [],\n  loading: true\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case constant.GET_COMMENTS:\n      return {\n        ...state,\n        comments: action.payload,\n        loading: false\n      };\n    case constant.ADD_COMMENT:\n      return {\n        ...state,\n        comments: [action.payload, ...state.comments],\n        loading: false\n      };\n    case constant.DELETE_COMMENT:\n      return {\n        ...state,\n        comments: state.comments.filter(comment => comment.commentId !== action.payload),\n        loading: false\n      }\n    default:\n      return state;\n  }\n}\n","/var/www/html/2020-organiser/antd-design/src/reducers/historyReducer.js",["164"],"import * as constant from \"../actions/constants\";\n\nconst initialState = {\n  histories: [],\n  loading: true\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case constant.GET_HISTORY:\n      return {\n        ...state,\n        histories: action.payload,\n        loading: false\n      };\n    case constant.ADD_HISTORY:\n      return {\n        ...state,\n        histories: [action.payload, ...state.histories],\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n","/var/www/html/2020-organiser/antd-design/src/reducers/ticketReducer.js",["165"],"/var/www/html/2020-organiser/antd-design/src/pages/ViewTicket.js",[],"/var/www/html/2020-organiser/antd-design/src/actions/commentActions.js",[],"/var/www/html/2020-organiser/antd-design/src/actions/historyActions.js",[],"/var/www/html/2020-organiser/antd-design/src/components/ViewTicket/ViewBreadCrumbs.js",[],"/var/www/html/2020-organiser/antd-design/src/components/ViewTicket/ViewDescriptions.js",[],"/var/www/html/2020-organiser/antd-design/src/components/ViewTicket/ViewAddComment.js",[],"/var/www/html/2020-organiser/antd-design/src/components/ViewTicket/ViewComments.js",[],"/var/www/html/2020-organiser/antd-design/src/components/ViewTicket/ViewTimeline.js",[],"/var/www/html/2020-organiser/antd-design/src/components/ViewTicket/ViewClosingComment.js",["166"],"import React, { useState } from \"react\"\nimport moment from \"moment\";\n\n// import redux\nimport { useStore } from \"react-redux\";\n\n// Import icons\nimport { CheckOutlined } from \"@ant-design/icons\"\n\n// Import Components\nimport { \n  Form, \n  Input, \n  Typography, \n  Button,\n  notification\n} from \"antd\";\nconst { TextArea } = Input\nconst { Title } = Typography  \n\nfunction ViewClosingComment({\n  handleAddComment, \n  handleAddHistory, \n  ticketId,\n  ticketInformation,\n  handlePutTicketStatusToClosed\n}) {\n\n  /**\n   * Component state\n   */\n  const [closingComment, setClosingComment] = useState(\"\"); \n  const [form] = Form.useForm();\n\n  /**\n   * Get current User\n   */\n  const { displayName } = useStore().getState().users.users;\n\n  /**\n   * Decontruct ticket information\n   */\n  const { \n    reference,\n    address, \n    name, \n    landline, \n    contactNumber,\n    network,\n    portability,\n    clientPackage,\n    requestedDate,\n    service,\n    status,\n    createdBy\n  } = ticketInformation;\n\n  /**\n   * Reset the form\n   */\n  const resetForm = () => {\n    form.resetFields();\n  };\n\n  /**\n   * Set Notification\n   * @param {string} type of the notification success, info, error or warning\n   * @param {string} message of the notification\n   * @param {string | void} description of the notification\n   */\n  const openNotificationWithIcon = (type, message, description) => {\n    notification[type]({\n      message,\n      description\n    });\n  }\n\n  /**\n   * Change the status to 'Closed'\n   */\n  const postClosingCommentHistory = () => {\n    const closingCommentHistoryObject = {\n      author: displayName,\n      action: \"closed the ticket\",\n      ticketId,\n      addedAt: moment().format('MMMM Do YYYY, h:mm:ss a')\n    };\n    handleAddHistory(JSON.stringify(closingCommentHistoryObject));\n  };\n\n  /**\n   * Add closing comment\n   */\n  const postClosingComment = () => {\n    const closingCommentObject = {\n      author: displayName,\n      comment: closingComment,\n      ticketId,\n      addedAt: moment().format('MMMM Do YYYY, h:mm:ss a')\n    };\n    handleAddComment(JSON.stringify(closingCommentObject), ticketId);\n  };\n\n  /**\n   * Updated ticket information\n   */\n  const updatedTicketInformation = () => {\n    const updatedTicketInformation = {\n      reference,\n      address,\n      name,\n      landline,\n      contactNumber,\n      network,\n      portability,\n      clientPackage,\n      requestedDate,\n      service,\n      status: \"Closed\",\n      createdBy\n    };\n    handlePutTicketStatusToClosed(JSON.stringify(updatedTicketInformation), ticketId);\n    openNotificationWithIcon(\"info\", \"Ticket Closed\", null)\n  };\n\n  /**\n   * Add closing comment and history on form submit\n   */\n  const addClosingComment = () => {\n    updatedTicketInformation();\n    postClosingComment();\n    postClosingCommentHistory();\n    resetForm();\n  };\n\n  return (\n    <>\n      <Title level={3}>Closing Comment</Title>\n      <Form \n        form={form}\n        layout=\"vertical\" \n        onFinish={addClosingComment} \n        style={{marginBottom: 32}}\n      >\n        <Form.Item\n          name=\"closing-comment\"\n          rules={[\n            {\n              required: true,\n              message: \"Can not be empty!\"\n            }\n          ]}\n        >\n          <TextArea\n            rows={4}\n            placeholder=\"Add a closing comment here\"\n            value={closingComment}\n            onChange={(e) => setClosingComment(e.target.value)}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Button \n            htmlType=\"submit\" \n            type=\"primary\" \n            style={{float: \"right\"}}\n            icon={<CheckOutlined />}\n          >\n            Add Closing Comment\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  )\n}\n\nexport default ViewClosingComment;\n","/var/www/html/2020-organiser/antd-design/src/reducers/tagReducer.js",["167"],"import * as constant from \"../actions/constants\";\n\nconst intitalState = {\n  tags: [],\n  ticketTags:[],\n  loading: true,\n}\n\nexport default function(state = intitalState, action) {\n  switch (action.type) {\n    case constant.GET_TAGS:\n      return {\n        ...state,\n        ticketTags: action.payload,\n        loading: false,\n      };\n    case constant.GET_ALL_TAGS:\n      return {\n        ...state,\n        tags: action.payload,\n        loading:false\n      };\n    case constant.GET_ALL_TAGS_FOR_OPEN_TICKETS:\n      return {\n        ...state,\n        tags: action.payload,\n        loading: false\n      };\n    case constant.GET_ALL_TAGS_CLOSED_TICKETS:\n      return {\n        ...state,\n        tags: action.payload,\n        loading: false\n      };\n    case constant.ADD_TAG:\n      return {\n        ...state,\n        ticketTags: [action.payload, ...state.ticketTags],\n        tags: [action.payload, ...state.tags],\n        loading: false\n      }\n    case constant.DELETE_TAG:\n      return {\n        ...state,\n        ticketTags: state.ticketTags.filter(tag => tag.tag_id !== action.payload),\n        tags: state.tags.filter(tag => tag.tag_id !== action.payload),\n        loading: false\n      };\n    default:\n      return state\n  }\n}","/var/www/html/2020-organiser/antd-design/src/actions/tagActions.js",[],"/var/www/html/2020-organiser/antd-design/src/components/Home/SneakPeakDrawer.js",[],"/var/www/html/2020-organiser/antd-design/src/actions/pageActions.js",[],"/var/www/html/2020-organiser/antd-design/src/reducers/pageReducer.js",["168"],"import * as constant from \"../actions/constants\";\n\nconst initialState = {\n  theme: \"light\",\n  loading: true,\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n      case constant.SET_LIGHT_THEME:\n        return {\n          ...state,\n          theme: \"light\"\n        }\n      case constant.SET_DARK_THEME:\n          return {\n            ...state,\n            theme: \"dark\"\n          }\n    default:\n      return state;\n  }\n}\n","/var/www/html/2020-organiser/antd-design/src/components/Home/TagDrawer.js",[],"/var/www/html/2020-organiser/antd-design/src/reducers/userReducer.js",["169"],"import * as constant from \"../actions/constants\";\n\nconst intitalState = {\n  users: null,\n  loading: true\n}\n\nexport default function(state = intitalState, action) {\n  switch (action.type) {\n    case constant.USER_LOGGED_IN:\n      return {\n        ...state,\n        users: action.payload,\n        loading: false\n      }\n    case constant.USER_LOGGED_OUT:\n      return {\n        ...state,\n        users: null,\n        loading: false\n      }\n    default:\n      return state\n  }\n}","/var/www/html/2020-organiser/antd-design/src/actions/userActions.js",[],"/var/www/html/2020-organiser/antd-design/src/pages/Login.js",[],"/var/www/html/2020-organiser/antd-design/src/firebase.js",["170"],"import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCmk4pDM_nPs0mSXFFqaO6HczW4fgVdU6U\",\n  authDomain: \"organiser-37dc2.firebaseapp.com\",\n  projectId: \"organiser-37dc2\",\n  storageBucket: \"organiser-37dc2.appspot.com\",\n  messagingSenderId: \"788303103951\",\n  appId: \"1:788303103951:web:112313606b18c3b31674ba\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider };","/var/www/html/2020-organiser/antd-design/src/components/Loader/LoginLoader.js",["171"],"import React from 'react'\n\n// import logo\nimport logo from \"../../dtLogo.png\";\n\nfunction LoginLoader() {\n  return (\n    <div style={{\n      position:\"absolute\",\n      top:\"50%\",\n      left:\"50%\",\n      transform: \"translate(-50%, -50%)\"\n    }}>\n      <div style={{ textAlign: \"center\" }}>\n        <img src={logo} />\n        <h1>Redirecting to the application. Please wait...</h1>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginLoader\n","/var/www/html/2020-organiser/antd-design/src/pages/Archive.js",[],"/var/www/html/2020-organiser/antd-design/src/components/ViewTicket/Snippet.js",["172"],"import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\n\nimport { \n  useDispatch, \n  useStore, \n  useSelector \n} from \"react-redux\";\n\n// Import actions\nimport { \n  getAllSnippetsForUser, \n  addSnippetForUser, \n  deleteSnippet \n} from \"../../actions/snippetActions\";\n\n// import icons\nimport { DeleteOutlined } from \"@ant-design/icons\";\n\n// import components\nimport { \n  Drawer, \n  Row, \n  Col,\n  Form,\n  Input,\n  Button,\n  Collapse,\n  Typography,\n  Tooltip\n} from \"antd\";\nconst { Panel } = Collapse;\n\nfunction Snippet({\n  onClose,\n  visible,\n}) {\n  \n  /**\n  * Component state\n  */\n  const [snippetTitle, setSnippedTitle] = useState(\"\");\n  const [snippetBody, setSnippetBody]   = useState(\"\");\n\n  const [form] = Form.useForm();\n\n  /**\n   * Get username\n   */\n  const { displayName } = useStore().getState().users.users;\n\n  /**\n   * Get all users snippets\n   */\n  const snippets = useSelector(state => state.snippets.snippets);\n\n  /**\n   * init redux hooks \n   */\n  const dispatch = useDispatch();\n\n  /**\n   * Get all the users snippets\n   */\n  useEffect(() => {\n    dispatch(getAllSnippetsForUser(displayName));\n  }, []);\n\n  /**\n   * Reset form input\n   */\n  const resetFields = () => {\n    form.resetFields();\n  };\n\n  /**\n  * Creates a new tag on form submit\n  */\n  const onSubmit = () => {    \n    const newSnippit = {\n      title:snippetTitle,\n      body: snippetBody,\n      createdAt: moment().format('MMMM Do YYYY, h:mm:ss a'),\n      author: displayName\n    };\n    dispatch(addSnippetForUser(JSON.stringify(newSnippit)));\n    resetFields();\n  }; \n\n\n  return (\n    <Drawer\n      closable={false}\n      onClose={onClose}\n      visible={visible}\n      width={650}\n    >\n      <Row>\n        <Col span={24}>\n        <Form \n          form={form} \n          onFinish={onSubmit} \n          layout=\"vertical\"\n        >\n          <Form.Item\n            label=\"Title\"\n            name=\"snippet-title\"\n            rules={[\n              {\n                type: \"string\",\n                required: true,\n                message: \"Required\"\n              }\n            ]}\n          >\n            <Input \n              allowClear\n              placeholder=\"Snippet title\"\n              value={snippetTitle}\n              onChange={(e) => setSnippedTitle(e.target.value)}\n            />\n          </Form.Item>\n          <Form.Item\n            label=\"Body\"\n            name=\"snippet-body\"       \n            rules={[\n              {\n                type: \"string\",\n                required: true,\n                message: \"Required\"\n              }\n            ]}\n          >\n            <Input.TextArea\n              rows={10}\n              autoSize\n              allowClear\n              onChange={(e) => setSnippetBody(e.target.value)}\n              value={snippetBody}\n              placeholder=\"Type snippet here...\"\n            />\n          </Form.Item>          \n          <Form.Item>\n            <Button \n              htmlType=\"submit\" \n              type=\"primary\" \n              style={{ \n                float: \"right\"                \n              }}\n            >\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n        </Col>\n      </Row>\n      <h3>Snippets</h3>\n      {snippets.length === 0 ? (\n        \"Fill the form above to create a snippet\"\n      ) : (\n        <Collapse expandIconPosition=\"right\" accordion>\n        {snippets.map((snippet, index) => (\n            <Panel \n              key={index} \n              header={(<b>{snippet.title}</b>)}\n              extra={\n                <Tooltip title=\"Delete Snippet\">\n                  <Button\n                    onClick={() => dispatch(deleteSnippet(snippet.snippetId))}\n                    icon={<DeleteOutlined />} \n                  />\n                </Tooltip>\n              }\n            >\n              <Typography.Paragraph\n                copyable               \n                style={{ \n                  whiteSpace: \"pre-line\", \n                  position: \"relative\",\n                  maxWidth: \"70ch\"\n                }}\n              >\n                {snippet.body}\n              </Typography.Paragraph>\n            </Panel>\n        ))}\n      </Collapse>\n      )}\n    </Drawer>\n  )\n}\n\nexport default Snippet; \n","/var/www/html/2020-organiser/antd-design/src/reducers/snippetReducer.js",["173"],"import * as constant from \"../actions/constants\";\n\nconst initialState = {\n  snippets:[],\n  loading:true\n};\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case constant.GET_ALL_SNIPPETS_FOR_USER:\n      return {\n        ...state,\n        snippets: action.payload,\n        loading: false\n      };\n    case constant.ADD_SNIPPET_FOR_USER:\n      return {\n        ...state,\n        snippets:[action.payload, ...state.snippets],\n        loading: false\n      };\n    case constant.DELETE_SNIPPET:\n      return {\n        ...state,\n        snippets: state.snippets.filter(snippet => snippet.snippetId !== action.payload),\n        loading: false\n      };\n    default:\n      return state;\n  }\n}","/var/www/html/2020-organiser/antd-design/src/actions/snippetActions.js",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":95,"column":6,"nodeType":"180","endLine":95,"endColumn":8,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":62,"column":9,"nodeType":"184","messageId":"185","endLine":62,"endColumn":23},{"ruleId":"182","severity":1,"message":"186","line":67,"column":9,"nodeType":"184","messageId":"185","endLine":67,"endColumn":23},{"ruleId":"187","severity":1,"message":"188","line":8,"column":1,"nodeType":"189","endLine":31,"endColumn":2},{"ruleId":"187","severity":1,"message":"188","line":8,"column":1,"nodeType":"189","endLine":25,"endColumn":2},{"ruleId":"187","severity":1,"message":"188","line":9,"column":1,"nodeType":"189","endLine":63,"endColumn":2},{"ruleId":"182","severity":1,"message":"190","line":54,"column":5,"nodeType":"184","messageId":"185","endLine":54,"endColumn":11},{"ruleId":"187","severity":1,"message":"188","line":9,"column":1,"nodeType":"189","endLine":52,"endColumn":2},{"ruleId":"187","severity":1,"message":"188","line":8,"column":1,"nodeType":"189","endLine":23,"endColumn":2},{"ruleId":"187","severity":1,"message":"188","line":8,"column":1,"nodeType":"189","endLine":25,"endColumn":2},{"ruleId":"182","severity":1,"message":"191","line":12,"column":7,"nodeType":"184","messageId":"185","endLine":12,"endColumn":18},{"ruleId":"192","severity":1,"message":"193","line":15,"column":9,"nodeType":"194","endLine":15,"endColumn":27},{"ruleId":"178","severity":1,"message":"195","line":67,"column":6,"nodeType":"180","endLine":67,"endColumn":8,"suggestions":"196"},{"ruleId":"187","severity":1,"message":"188","line":8,"column":1,"nodeType":"189","endLine":31,"endColumn":2},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'login' and 'logout'. Either include them or remove the dependency array. If 'login' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["199"],"no-unused-vars","'serviceOptions' is assigned a value but never used.","Identifier","unusedVar","'packageOptions' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'status' is assigned a value but never used.","'firebaseApp' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch' and 'displayName'. Either include them or remove the dependency array.",["200"],"no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [login, logout]",{"range":"205","text":"206"},"Update the dependencies array to be: [dispatch, displayName]",{"range":"207","text":"208"},[1907,1909],"[login, logout]",[1140,1142],"[dispatch, displayName]"]